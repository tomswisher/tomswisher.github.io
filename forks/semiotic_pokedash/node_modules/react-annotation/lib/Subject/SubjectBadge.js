"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _badge = require("viz-annotation/lib/Subject/badge");

var _badge2 = _interopRequireDefault(_badge);

var _Subject2 = require("./Subject");

var _Subject3 = _interopRequireDefault(_Subject2);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable no-unused-vars */

/* eslint-enable no-unused-vars */


var SubjectBadge = function (_Subject) {
  _inherits(SubjectBadge, _Subject);

  function SubjectBadge() {
    _classCallCheck(this, SubjectBadge);

    return _possibleConstructorReturn(this, (SubjectBadge.__proto__ || Object.getPrototypeOf(SubjectBadge)).apply(this, arguments));
  }

  _createClass(SubjectBadge, [{
    key: "getComponents",
    value: function getComponents(_ref) {
      var leftRight = _ref.leftRight,
          topBottom = _ref.topBottom,
          text = _ref.text,
          editMode = _ref.editMode,
          color = _ref.color,
          radius = _ref.radius;

      var components = (0, _badge2.default)({
        leftRight: leftRight,
        topBottom: topBottom,
        text: text,
        editMode: editMode,
        color: color,
        radius: radius
      });

      components.handleKeys = { leftRight: leftRight, topBottom: topBottom };
      components.handleFunction = function (h, data) {
        var lr = data.x < -radius * 2 ? "left" : data.x > radius * 2 ? "right" : undefined;
        var tb = data.y < -radius * 2 ? "top" : data.y > radius * 2 ? "bottom" : undefined;

        return {
          leftRight: lr,
          topBottom: tb
        };
      };

      return components;
    }
  }]);

  return SubjectBadge;
}(_Subject3.default);

exports.default = SubjectBadge;


SubjectBadge.propTypes = {
  leftRight: _propTypes2.default.oneOf(["left", "right"]),
  topBottom: _propTypes2.default.oneOf(["top", "bottom"]),
  text: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  color: _propTypes2.default.string,
  editMode: _propTypes2.default.bool
};