"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rectangleEnclosure = exports.circleEnclosure = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _reactAnnotation = require("react-annotation");

var _Annotation = require("../Annotation");

var _Annotation2 = _interopRequireDefault(_Annotation);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var circleEnclosure = exports.circleEnclosure = function circleEnclosure(_ref) {
  var d = _ref.d,
      i = _ref.i,
      circle = _ref.circle;

  var noteData = _extends({
    dx: 0,
    dy: 0,
    note: { label: d.label },
    connector: { end: "arrow" }
  }, d, {
    coordinates: undefined,
    x: circle.x,
    y: circle.y,
    type: _reactAnnotation.AnnotationCalloutCircle,
    subject: {
      radius: circle.r,
      radiusPadding: d.radiusPadding || 2
    }
  });

  if (noteData.rp) {
    switch (noteData.rp) {
      case "top":
        noteData.dx = 0;
        noteData.dy = -circle.r - noteData.rd;
        break;
      case "bottom":
        noteData.dx = 0;
        noteData.dy = circle.r + noteData.rd;
        break;
      case "left":
        noteData.dx = -circle.r - noteData.rd;
        noteData.dy = 0;
        break;
      default:
        noteData.dx = circle.r + noteData.rd;
        noteData.dy = 0;
    }
  }
  //TODO: Support .ra (setting angle)

  return _react2.default.createElement(_Annotation2.default, { key: d.key || "annotation-" + i, noteData: noteData });
};

var rectangleEnclosure = exports.rectangleEnclosure = function rectangleEnclosure(_ref2) {
  var bboxNodes = _ref2.bboxNodes,
      d = _ref2.d,
      i = _ref2.i;
  var _d$padding = d.padding,
      padding = _d$padding === undefined ? 0 : _d$padding;

  var bbox = [[Math.min.apply(Math, _toConsumableArray(bboxNodes.map(function (p) {
    return p.x0;
  }))) - padding, Math.min.apply(Math, _toConsumableArray(bboxNodes.map(function (p) {
    return p.y0;
  }))) - padding], [Math.max.apply(Math, _toConsumableArray(bboxNodes.map(function (p) {
    return p.x1;
  }))) + padding, Math.max.apply(Math, _toConsumableArray(bboxNodes.map(function (p) {
    return p.y1;
  }))) + padding]];

  var noteData = _extends({
    dx: d.dx || -25,
    dy: d.dy || -25,
    note: { label: d.label },
    connector: { end: "arrow" }
  }, d, {
    type: _reactAnnotation.AnnotationCalloutRect,
    x: bbox[0][0],
    y: bbox[0][1],
    subject: {
      width: bbox[1][0] - bbox[0][0],
      height: bbox[1][1] - bbox[0][1]
    }
  });

  return _react2.default.createElement(_Annotation2.default, { key: d.key || "annotation-" + i, noteData: noteData });
};